// select our database
use('realschool');

// remove duplicates in both collections
function removeDuplicatesStudents() {
    db.students.aggregate(
        [
            // stage 1: group by firstName and lastName as a whole
            // and count the # of students in each group
            {
                $group: {
                  _id: {
                    fn: "$firstName",
                    ln: "$lastName"
                  },
                  uniqueIds: { $addToSet: "$_id" },  // for each student, add it's _id (original coll) in an array
                  count: { $sum: 1 },  // gives to each student 1 as value, so sum all the one => count # students
                }
            },
            // stage 2: retrieve only groups where count > 1
            {
                $match: {
                  count: { $gt: 1 }
                }
            }
        ]
    ).forEach(function(document) {
        // use the shift function in js to remove (and get)
        // the first element of a `collection` (in programing language sens)
        // here, we remove the first elem in uniqueIds array
        document.uniqueIds.shift();

        // then, we remove all students whom ids in uniqueIds (remaining elem)
        db.students.deleteMany({ _id: { $in: document.uniqueIds } })

    })

};


function removeDuplicatesTeachers() {
    db.teachers.aggregate(
        [
            // stage 1: group by teacherName
            {
                $group: {
                  _id: "$teacherName",
                  uniqueIds: { $addToSet: "$_id" },
                  count: { $sum: 1 },
                }
            },
            // stage 2: retrieve only groups where count > 1
            {
                $match: {
                  count: { $gt: 1 }
                }
            }
        ]
    ).forEach(function(document) {
        document.uniqueIds.shift();
        db.teachers.deleteMany({ _id: { $in: document.uniqueIds } })

    })

};

removeDuplicatesStudents();
removeDuplicatesTeachers();

