// select the db
use('realschool');

// function to read students
function readStudents(limit=null) {
    let documents;
    if (limit !== null) {
        // limit to #limit
        // read all
        documents = db.students.find(
            {}, {_id: false}  // do not return _id field
        ).limit(limit);
    } else {
        // read all
        documents = db.students.find(
            {}, {_id: false}
        );
    }
    
    // print
    print(`The number of documents in students collection is: ${documents.count()}`);
    print('Below are the documents');
    while (documents.hasNext()) {
        print(documents.next());
    }
};


// read students with conditions
function readStudentsBy(filters={}, project={}, limit=0) {
    const documents = db.students.find(filters, project).limit(limit);
    print(`No. documents: ${documents.count()}`)
    while (documents.hasNext()) {
        printjson(documents.next());
    }
};

/**
 * readStudentsBy(
    filters={gpa: {$gte: 4.0}},
    project={_id: false, lastName: 1, gpa: 1},
    limit=3
);
*/

// read teachers with conditions
function readTeachersBy(filters={}, project={}, limit=0) {
    const documents = db.teachers.find(filters, project).limit(limit);
    print(`No. documents: ${documents.count()}`)
    while (documents.hasNext()) {
        printjson(documents.next());
    }
};


// function to read students or teachers by conditions
function readStudTeachBy(whatType='students', filters={}, project={}, limit=0, sort={}) {
    let collection;
    switch (whatType) {
        case 'students':
            collection = db.students;
            break;
        case 'teachers':
            collection = db.teachers;
            break;
        default:
            print(`whatType entered: ${whatType}. It should be either 'students" or 'teachers'`);
    }

    // get the desired documents
    const documents = collection.find(filters, project).limit(limit).sort(sort);

    // print the documents
    while (documents.hasNext()) {
        print(documents.next());
    }
};


readStudTeachBy(
    whatType='teachers',
    filters={},
    project={_id: 0, teacherName: 1, notation: 1},
    limit=0,
    sort={ notation: -1 }
);



